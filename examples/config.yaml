monitorSite: "sol"

sites:
  - name: "mars-lab"
    tags: ["region-mars", "dev"]
    groups:
      - name: "api-service"
        tags: ["service-api", "critical"]
        ruleMode: "any"  # Override default "all" mode for this group
        hosts:
          - host: "api-1.mars.lab"
            tags: ["primary"]
          - host: "api-2.mars.lab"
            tags: ["primary"]
          - host: "api-3.mars.lab"
            tags: ["backup"]
        checks:
          - port: "8080"
            protocol: HTTP
            interval: "30s"
            tags: ["http-api"]
          - port: "9090"
            protocol: HTTP
            interval: "1m"
            tags: ["metrics"]
            ruleMode: "all"  # Override group's "any" mode for this check

      - name: "database"
        tags: ["service-db", "ha"]
        hosts:
          - host: "db-1.mars.lab"
            tags: ["primary"]
          - host: "db-2.mars.lab"
            tags: ["replica"]
        checks:
          - port: "5432"
            protocol: TCP
            interval: "15s"
            tags: ["postgres"]

  - name: "pluto-prod"
    tags: ["region-pluto", "prod"]
    groups:
      - name: "api-service"
        tags: ["service-api", "critical", "prod"]
        hosts:
          - host: "api-1.pluto.prod"
            tags: ["primary"]
          - host: "api-2.pluto.prod"
            tags: ["primary"]
          - host: "api-3.pluto.prod"
            tags: ["primary"]
        checks:
          - port: "443"
            protocol: HTTPS
            interval: "10s"
            tags: ["https-api"]
            verifyCert: true  # Enable certificate checking
          - port: "9100"
            protocol: HTTP
            interval: "30s"
            tags: ["metrics"]

      - name: "mail-service"
        tags: ["service-mail"]
        hosts:
          - host: "smtp-1.pluto.prod"
            tags: ["primary"]
          - host: "smtp-2.pluto.prod"
            tags: ["backup"]
        checks:
          - port: "25"
            protocol: SMTP
            interval: "1m"
            tags: ["smtp"]

rules:
  - name: "api_high_latency"
    type: "standard"
    condition: "responseTime > 500"
    tags: ["http-api", "https-api"]
    notifications: ["log"]

  - name: "api_critical_downtime"
    type: "standard"
    condition: "downtime > 30s"
    tags: ["service-api", "critical"]
    notifications: ["log"]

  - name: "db_downtime_warning"
    type: "standard"
    condition: "downtime > 10s"
    tags: ["service-db"]
    notifications: ["log"]

  - name: "prod_service_degraded"
    type: "standard"
    condition: "responseTime > 1000 || downtime > 0"
    tags: ["prod", "critical"]
    notifications: ["log"]

  - name: "cert_expiring_soon"
    type: "cert"
    minDaysValidity: 30
    tags: ["https-api"]
    notifications: ["log"]

  - name: "cert_critical"
    type: "cert"
    minDaysValidity: 7
    tags: ["https-api", "critical"]
    notifications: ["log"]

notifications:
  - type: "log"    # Currently the only implemented type
  # Future notification types:
  # - type: "slack"
  #   webhook: "https://hooks.slack.com/services/..."
  #   channel: "#alerts"
  # - type: "email"
  #   smtp_server: "smtp.example.com"
  #   from: "alerts@example.com"
  #   to: ["ops@example.com"]
